plugins {
	id "com.google.protobuf" version "0.8.15"
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

group = 'com.sb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'io.grpc', name: 'grpc-protobuf', version: '1.36.0'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.2'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.2'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.12.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


test {
	useJUnitPlatform()
}

clean {
	delete protobuf.generatedFilesBaseDir
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.2.0"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.3.0'
		}
	}
	generateProtoTasks.generatedFilesBaseDir = 'src'

	generateProtoTasks {
		// all() returns the collection of all protoc tasks
		all().each { task ->
			// Here you can configure the task
		}

		// In addition to all(), you may get the task collection by various
		// criteria:

		// (Java only) returns tasks for a sourceSet
		ofSourceSet('main')

	}
}

sourceSets {
	main {
		proto {
			// In addition to the default 'src/main/proto'
			srcDir 'src/main/proto'
			// In addition to the default '**/*.proto' (use with caution).
			// Using an extension other than 'proto' is NOT recommended,
			// because when proto files are published along with class files, we can
			// only tell the type of a file from its extension.
			include '**/*.protodevel'
		}
	}
	test {
		proto {
			// In addition to the default 'src/test/proto'
			srcDir 'src/test/protocolbuffers'
		}
	}
}